Query to create Users Table

CREATE TABLE Users (
    id CHAR(36) PRIMARY KEY, 
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role VARCHAR(20) DEFAULT 'user' CHECK (role IN ('user', 'manager', 'admin')),
    organization VARCHAR(255),  
    status VARCHAR(20) DEFAULT 'approved' CHECK (status IN ('approved', 'pending', 'rejected'))
);

------------------------------------------------------------------------------------------------------
Query to create Admin

INSERT INTO Users (id, firstname, lastname, email, password, role, organization, status)
VALUES (
    NEWID(),  -- Generates a GUID in SQL Server
    'Admin',  -- First name
    'Admin',  -- Last name
    'admin30@gmail.com',  -- Email
    'admin123',  -- Plain text password (replace with your actual password)
    'admin',  -- Role
    'EventEase',  -- Organization
    'approved'  -- Status
);

----------------------------------------------------------------------------------------------------

Query to create event Table

CREATE TABLE Events (
    Id UNIQUEIDENTIFIER PRIMARY KEY DEFAULT NEWID(),
    Name NVARCHAR(100) NOT NULL,
    Price DECIMAL(10, 2) NOT NULL,
    Tickets INT NOT NULL,
    EventDate DATE NOT NULL,
    Location NVARCHAR(255) NOT NULL,
    ImagePath NVARCHAR(255),
    Description NVARCHAR(MAX),
    UserId CHAR(36) NOT NULL,

    CONSTRAINT FK_Events_Users FOREIGN KEY (UserId)
        REFERENCES Users(id)
        ON DELETE CASCADE
);

NB!!!!! Forgot to add status for events like (Available, Soldout, Cancelled) so that when the tickets
when all tickets are purchased we can have differences.

